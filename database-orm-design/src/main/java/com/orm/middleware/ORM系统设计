JPA是一种ORM层的规范

 TODO: 访问数据库必须使用连接池, 提供可靠性保护 !!
 1. 必须具有(网络中断)自动重连的功能
 2. 必须设置何理的超时时间, 防止程序访问数据库长时间的挂死
 3. 数据库连接池必须设置最大值限制, 默认是500个连接
 4. 定期回收连接, 设置超时时间
 5. Java语言推荐使用mybatis持久层框架来访问数据库

---------------------------------------------------------------
1. 如何设计一个ORM层的中间件 ? (参考Hibernate, Mybatis)
   1. public api   提供给用户使用的API, 注明使用文档
   2. enum types   提供操作的枚举类型，定义使用范围
   3. exception    定义中间件抛出的异常类型
   4. annotations  提供满足使用的注解，提高使用性
   5. boot impl    核心逻辑的实现，API的实现
   6. Connect pool 连接池的实现 ?
   7. CRUD Impl    提供数据库操作相关的依赖，定义，约束，适配
   8. 中间件额外的功能: 缓存，插件，SPI注入...
   9. 执行Engine引擎: 底层基于Java JDBC

2. 如何设计数据库连接池 ?
  https://cloud.tencent.com/developer/article/1057410
  如果使用连接池, 如何判断那些线程占用了连接? 那些线程占用了不止一个连接?
  适用Tomcat Web服务器自带的连接池DBCP, 是否可以使用工具对连接进行监测 ?

3. 一个数据库连接如何保证只在一个线程中传递 ?
  使用ThreadLocal<DatasourceEngine>进行封装

4. 使用Spring Data JPA作为ORM层，Configuration配置Datasource连接的时，如果同时有多个Datasource，如何设置 ?
  使用@Qualifier("")注解来区别注入同类型的Datasource的bean，通过不同名称来指定获取