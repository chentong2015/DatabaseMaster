<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
    <class name="com.hibernate5.testing.any.MyAnyClass" table="t_my_any_class">
        <id type="long" name="id" column="id"/>
        <property type="java.lang.String" name="name" column="name"/>

        <!-- TODO. <any> mapping polymorphic association to classes from multiple tables
                   多表级联，构成一种多态的级联关系 => 关联的多表需要使用table来存储
             name：属性名
             id-type：标识符类型
             meta-type(可选 默认string)：允许辨别标志(discriminator)映射的任何类型
             cascade(可选 默认none)：级联的类型
             access(可选 默认property)：Hibernate 用来访问属性值的策略
             optimistic-lock(可选 — 默认是 true)：表明更新此组件是否需要获取乐观锁，当属性变脏时，是否增加版本号Version-->
        <any id-type="double" name="anyClassModel" meta-type="string">
            <!-- 将指定的字段赋值给"anyClassModel"属性名称，则会存储指定value值 -->
            <meta-value value="value1" class="com.hibernate5.testing.any.model1.ClassModel1"/>
            <meta-value value="value2" class="com.hibernate5.testing.any.model2.ClassModel2"/>

            <!-- DB Table中会添加的两个列字段:
                 m_type使用字符串区别类型
                 m_ref 具体类型的主键id, 根据id-type设置的主键类型 -->
            <column name="m_type"/>
            <column name="m_ref"/>
        </any>
    </class>
</hibernate-mapping>