当配置Lazy Init时，一旦Session关闭，则数据将不能再获取到
org.hibernate.LazyInitializationException: could not initialize proxy [xx..application.ScenarioApplicationDTO#7] - no Session
   at org.hibernate.proxy.AbstractLazyInitializer.initialize(AbstractLazyInitializer.java:176)
   at org.hibernate.proxy.AbstractLazyInitializer.getImplementation(AbstractLazyInitializer.java:322)
   at org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor.intercept(ByteBuddyInterceptor.java:45)
   at org.hibernate.proxy.ProxyConfiguration$InterceptorDispatcher.intercept(ProxyConfiguration.java:95)
   at xx.risk.sourcemanager.persistence.dto.scenario.application.ScenarioApplicationDTO$HibernateProxy$e0s0uYhS.getProxySetReference(Unknown Source)
   at xx.risk.sourcemanager.run.RunUtils.initProxySet(RunUtils.java:77)
   at xx.risk.sourcemanager.run.RunImpl.initialize(RunImpl.java:76)
   at xx.risk.sourcemanager.run.AbstractRunImpl.init(AbstractRunImpl.java:96)
   at xx.risk.sourcemanager.impl.persistence.DBRepository.tryInitAndAdd(DBRepository.java:899)
   at xx.risk.sourcemanager.impl.persistence.DBRepository.lambda$loadAllRuns$5(DBRepository.java:812)
   at xx.risk.sourcemanager.persistence.dao.hibernate.RunDaoImpl.findByType(RunDaoImpl.java:35)
   at xx.risk.sourcemanager.impl.persistence.DBRepository.loadAllRuns(DBRepository.java:809)
   at xx.risk.sourcemanager.run.RunManagerImpl.loadAll(RunManagerImpl.java:116)
   ...

解决以上异常:
1. <property name="hibernate.enable_lazy_load_no_trans">true</property>
   配置即使session关闭，当获取lazy init的数据时，hibernate会额外开启其它的session来发送请求并获取数据
   该属性设置违反设计本身，可能对性能造成影响 !!

2. Mark as @Transactional
   对于Spring框架，可以考虑通过事务来解决，@Transactional会在底层自动处理事务的传播机制等