<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd">

    <!-- TODO: 这里扫描指定package下的全部class类型，需要自定义扫描的annotation注解，指定过滤的类型
               否则会抛出异常：Offending resource: class path resource  -->
    <context:component-scan base-package="JdbcTemplateJdcp.dao" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
    </context:component-scan>

    <context:property-placeholder system-properties-mode="NEVER" location="classpath:data-source.properties"/>

    <!-- TODO: 这里使用的dbcp连接池中的BasicDataSource类型，实现了DataSource接口 -->
    <bean name="basicDataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="url" value="${jdbc.url}"/>
        <!-- driver-class-name可以不提供，Spring Boot能够自动从URL推断 -->
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!-- <bean name="infoDao" class="JdbcTemplateJdcp.dao.BaseJdbcTemplate">
          使用Setter方法来注入属性的值
        <property name="dataSource" ref="basicDataSource"/>
    </bean>  -->
</beans>