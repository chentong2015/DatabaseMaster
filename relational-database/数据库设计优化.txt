Catalog和Schema是相同的概念
 - Catalog is used with Oracle, DB2 and MySQL
 - Schema is for PostgresSQL

基本原则: 满足数据库开发常见规范和约束
基础优化策略：数据库表优化，索引优化，SQL慢查询的优化
高级优化策略: 分布式缓存，CDN，数据库读写分离(CopyOnWrite思想)，换数据库 NoSQL

TODO: 数据库表优化
1. 表的字段尽可能用NOT NULL
2. 字段长度固定的表查询会更快
3. 把数据库的大表按时间或一些标志分成小表
4. 表的ID主键推荐设置成BigINT以支撑大数据以及长时间的使用

TODO. 数据库实战项目操作
1. 原则上不在数据库中存储非法数据，除非用于测试，程序在DB中存储非法数据前必须提示
2. 相同的字符数目，由于DB存储编码格式导致超出存储空间的大小，必须对字符串进行截取
3. 数据库可能不支持存储特殊的字符，存储前需要转义，提取后需要再解析

为什么数据库中的表在设计是有外键约束的，但实际建表操作时却可以删除外键
1. 没有外键对于一条需要匹配外键的查询语句而言并不影响
   SELECT * FROM student
   LEFT JOIN grade ON student.id = grade.id
   WHERE grade.id = 1;
2. 对于数据库表经常变动update的场景，添加外键约束会影响修改数据
3. 方便添加测试数据到表中，而不用考虑外键对应表的数据